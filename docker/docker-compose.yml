version: "2"

services:
  
  frontend:
    image: challenges-frontend:1.0
    ports:
      - 3000:80

  dbpg:
    image: postgres:11.18-bullseye
    container_name: dbpg
    environment:
      - POSTGRES_PASSWORD=mssb
      - POSTGRES_USER=mssb
      - POSTGRES_DB=mssb
    networks:
      - microservices
    #expose:
     # - 5433
    ports:
      - 5432:5432
    volumes: 
      - dbpg-data:/var/lib/postgresql/data
  
  multiplication:
    image: multiplication:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul-dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpg:5432/mssb
      - SPRING_DATASOURCE_USER=mssb
      - SPRING_DATASOURCE_PASSWORD=mssb
      - SPRING_RABBITMQ_HOST=rabbitmq-dev
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - dbpg
          #condition: service_completed_successfully
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
    links:
      - dbpg:dbpg
  
  gamification:
    image: gamification:0.0.1-SNAPSHOT
    container_name: gamification
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul-dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpg:5432/mssb
      - SPRING_DATASOURCE_USER=mssb
      - SPRING_DATASOURCE_PASSWORD=mssb
      - SPRING_RABBITMQ_HOST=rabbitmq-dev
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - dbpg
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  
  gateway:
    image: gateway:0.0.1-SNAPSHOT
    container_name: gateway
    ports:
      - 8000:8000
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul-dev
      - SPRING_RABBITMQ_HOST=rabbitmq-dev
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  
  logs:
    image: logs:0.0.1-SNAPSHOT
    container_name: logs
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul-dev
      - SPRING_RABBITMQ_HOST=rabbitmq-dev
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  
  consul-importer:
    image: consul-importer:1.0
    container_name: consul-importer
    depends_on:
      - consul-dev
    networks:
      - microservices
  
  consul-dev:
    image: consul
    container_name: consul
    ports:
      - 8500:8500
      - 8600:8600/udp
    command: agent -dev -node=learnmicro -client=0.0.0.0 -log-level=INFO
    networks:
      - microservices
  
  rabbitmq-dev:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - microservices
  
  
      
volumes:
  dbpg-data:

networks:
  microservices:
    #driver: overlay
    #name: host
