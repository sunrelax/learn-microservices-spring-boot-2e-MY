version: "3"

services:
  frontend:
    image: challenges-frontend:1.0
    ports:
      - '3000:80'
  multiplication:
    image: multiplication:0.0.1-SNAPSHOT
    environment:
      - dbhost=172.17.0.1
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_DATASOURCE_URL=jdbc:postgresql://172.17.0.1:5432/mssb
      - SPRING_DATASOURCE_USER=mssb
      - SPRING_DATASOURCE_PASSWORD=mssb
      - SPRING_RABBITMQ_HOST=172.17.0.1
    depends_on:
      - db
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  gamification:
    image: gamification:0.0.1-SNAPSHOT
    environment:
      - dbhost=172.17.0.1
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_DATASOURCE_URL=jdbc:postgresql://172.17.0.1:5432/mssb
      - SPRING_DATASOURCE_USER=mssb
      - SPRING_DATASOURCE_PASSWORD=mssb
      - SPRING_RABBITMQ_HOST=172.17.0.1
    depends_on:
      - db
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  gateway:
    image: gateway:0.0.1-SNAPSHOT
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_RABBITMQ_HOST=172.17.0.1
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  logs:
    image: logs:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_RABBITMQ_HOST=172.17.0.1
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  consul-importer:
    image: consul-importer:1.0
    depends_on:
      - consul-dev
    networks:
      - microservices
  consul-dev:
    image: consul
    container_name: consul
    ports:
      - '8500:8500'
      - '8600:8600/udp'
    command: 'agent -dev -node=learnmicro -client=0.0.0.0 -log-level=INFO'
    networks:
      - microservices
  rabbitmq-dev:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - microservices
  db:
    image: postgres:latest
    restart: always
    container_name: db
    environment:
      - POSTGRES_PASSWORD=mssb
      - POSTGRES_USER=mssb
      - POSTGRES_DB=mssb
    expose:
      - '5432'
    ports:
      - '5432:5432'
    #volumes: 
    #  - db:/var/lib/postgresql/data
      
#volumes:
#  db:

networks:
  microservices:
    driver: bridge
