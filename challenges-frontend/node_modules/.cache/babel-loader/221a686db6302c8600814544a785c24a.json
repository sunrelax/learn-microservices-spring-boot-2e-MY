{"ast":null,"code":"import _defineProperty from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import ApiClient from\"../services/ApiClient\";import LastAttemptsComponent from'./LastAttemptsComponent';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChallengeComponent=/*#__PURE__*/function(_React$Component){_inherits(ChallengeComponent,_React$Component);var _super=_createSuper(ChallengeComponent);function ChallengeComponent(props){var _this;_classCallCheck(this,ChallengeComponent);_this=_super.call(this,props);_this.state={a:'',b:'',user:'',message:'',guess:0,lastAttempts:[]};_this.handleSubmitResult=_this.handleSubmitResult.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(ChallengeComponent,[{key:\"componentDidMount\",value:function componentDidMount(){this.refreshChallenge();}},{key:\"refreshChallenge\",value:function refreshChallenge(){var _this2=this;ApiClient.challenge().then(function(res){if(res.ok){res.json().then(function(json){_this2.setState({a:json.factorA,b:json.factorB});});}else{_this2.updateMessage(\"Can't reach the server\");}});}},{key:\"handleChange\",value:function handleChange(event){var name=event.target.name;this.setState(_defineProperty({},name,event.target.value));}},{key:\"handleSubmitResult\",value:function handleSubmitResult(event){var _this3=this;event.preventDefault();ApiClient.sendGuess(this.state.user,this.state.a,this.state.b,this.state.guess).then(function(res){if(res.ok){res.json().then(function(json){if(json.correct){_this3.updateMessage(\"Congratulations! Your guess is correct\");}else{_this3.updateMessage(\"Oops! Your guess \"+json.resultAttempt+\" is wrong, but keep playing!\");}_this3.updateLastAttempts(_this3.state.user);_this3.refreshChallenge();});}else{_this3.updateMessage(\"Error: server error or not available\");}});}},{key:\"updateMessage\",value:function updateMessage(m){this.setState({message:m});}},{key:\"updateLastAttempts\",value:function updateLastAttempts(userAlias){var _this4=this;ApiClient.getAttempts(userAlias).then(function(res){if(res.ok){var attempts=[];res.json().then(function(data){data.forEach(function(item){attempts.push(item);});_this4.setState({lastAttempts:attempts});});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"display-column\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your new challenge is\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"challenge\",children:[this.state.a,\" x \",this.state.b]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmitResult,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Your alias:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",maxLength:\"12\",name:\"user\",value:this.state.user,onChange:this.handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Your guess:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",name:\"guess\",value:this.state.guess,onChange:this.handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Submit\"})]}),/*#__PURE__*/_jsx(\"h4\",{children:this.state.message}),this.state.lastAttempts.length>0&&/*#__PURE__*/_jsx(LastAttemptsComponent,{lastAttempts:this.state.lastAttempts})]});}}]);return ChallengeComponent;}(React.Component);export default ChallengeComponent;","map":{"version":3,"sources":["/home/giuseppe/Documents/java/workspace/git/learn-microservices-spring-boot-2e-my/challenges-frontend/src/components/ChallengeComponent.js"],"names":["React","ApiClient","LastAttemptsComponent","ChallengeComponent","props","state","a","b","user","message","guess","lastAttempts","handleSubmitResult","bind","handleChange","refreshChallenge","challenge","then","res","ok","json","setState","factorA","factorB","updateMessage","event","name","target","value","preventDefault","sendGuess","correct","resultAttempt","updateLastAttempts","m","userAlias","getAttempts","attempts","data","forEach","item","push","length","Component"],"mappings":"0yCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,C,2FAEMC,CAAAA,kB,oIAEF,4BAAYC,KAAZ,CAAmB,oDACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,CAAC,CAAE,EADM,CACFC,CAAC,CAAE,EADD,CAETC,IAAI,CAAE,EAFG,CAGTC,OAAO,CAAE,EAHA,CAITC,KAAK,CAAE,CAJE,CAKTC,YAAY,CAAE,EALL,CAAb,CAOA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CAVe,aAWlB,C,gEAED,4BAA0B,CACtB,KAAKE,gBAAL,GACH,C,gCAED,2BAAmB,iBACfd,SAAS,CAACe,SAAV,GAAsBC,IAAtB,CACI,SAAAC,GAAG,CAAI,CACH,GAAIA,GAAG,CAACC,EAAR,CAAY,CACRD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAG,IAAI,CAAI,CACpB,MAAI,CAACC,QAAL,CAAc,CACVf,CAAC,CAAEc,IAAI,CAACE,OADE,CAEVf,CAAC,CAAEa,IAAI,CAACG,OAFE,CAAd,EAIH,CALD,EAMH,CAPD,IAOO,CACH,MAAI,CAACC,aAAL,CAAmB,wBAAnB,EACH,CACJ,CAZL,EAcH,C,4BAED,sBAAaC,KAAb,CAAoB,CAChB,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B,CACA,KAAKL,QAAL,oBACKK,IADL,CACYD,KAAK,CAACE,MAAN,CAAaC,KADzB,GAGH,C,kCAED,4BAAmBH,KAAnB,CAA0B,iBACtBA,KAAK,CAACI,cAAN,GACA5B,SAAS,CAAC6B,SAAV,CAAoB,KAAKzB,KAAL,CAAWG,IAA/B,CACI,KAAKH,KAAL,CAAWC,CADf,CACkB,KAAKD,KAAL,CAAWE,CAD7B,CAEI,KAAKF,KAAL,CAAWK,KAFf,EAGKO,IAHL,CAGU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,EAAR,CAAY,CACRD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAG,IAAI,CAAI,CACpB,GAAIA,IAAI,CAACW,OAAT,CAAkB,CACd,MAAI,CAACP,aAAL,CAAmB,wCAAnB,EACH,CAFD,IAEO,CACH,MAAI,CAACA,aAAL,CAAmB,oBAAsBJ,IAAI,CAACY,aAA3B,CACnB,8BADA,EAEH,CACD,MAAI,CAACC,kBAAL,CAAwB,MAAI,CAAC5B,KAAL,CAAWG,IAAnC,EACA,MAAI,CAACO,gBAAL,GACH,CATD,EAUH,CAXD,IAWO,CACJ,MAAI,CAACS,aAAL,CAAmB,sCAAnB,EACF,CACJ,CAlBL,EAmBH,C,6BAED,uBAAcU,CAAd,CAAyB,CACrB,KAAKb,QAAL,CAAc,CACZZ,OAAO,CAAEyB,CADG,CAAd,EAGH,C,kCAED,4BAAmBC,SAAnB,CAAsC,iBAClClC,SAAS,CAACmC,WAAV,CAAsBD,SAAtB,EAAiClB,IAAjC,CAAsC,SAAAC,GAAG,CAAI,CACzC,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,GAAIkB,CAAAA,QAAmB,CAAG,EAA1B,CACAnB,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAqB,IAAI,CAAI,CACpBA,IAAI,CAACC,OAAL,CAAa,SAAAC,IAAI,CAAI,CACjBH,QAAQ,CAACI,IAAT,CAAcD,IAAd,EACH,CAFD,EAGA,MAAI,CAACnB,QAAL,CAAc,CACVV,YAAY,CAAE0B,QADJ,CAAd,EAGH,CAPD,EAQH,CACJ,CAZD,EAaH,C,sBAED,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,oCACI,6CADJ,cAEI,aAAK,SAAS,CAAC,WAAf,WACK,KAAKhC,KAAL,CAAWC,CADhB,OACsB,KAAKD,KAAL,CAAWE,CADjC,GAFJ,GADJ,cAOI,cAAM,QAAQ,CAAE,KAAKK,kBAArB,wBACI,oDAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,IAA7B,CACO,IAAI,CAAC,MADZ,CAEO,KAAK,CAAE,KAAKP,KAAL,CAAWG,IAFzB,CAGO,QAAQ,CAAE,KAAKM,YAHtB,EAFJ,GADJ,cAQI,aARJ,cASI,oDAEI,cAAO,IAAI,CAAC,QAAZ,CAAqB,GAAG,CAAC,GAAzB,CACO,IAAI,CAAC,OADZ,CAEO,KAAK,CAAE,KAAKT,KAAL,CAAWK,KAFzB,CAGO,QAAQ,CAAE,KAAKI,YAHtB,EAFJ,GATJ,cAgBI,aAhBJ,cAiBI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EAjBJ,GAPJ,cA0BI,oBAAK,KAAKT,KAAL,CAAWI,OAAhB,EA1BJ,CA2BK,KAAKJ,KAAL,CAAWM,YAAX,CAAwB+B,MAAxB,CAAiC,CAAjC,eACG,KAAC,qBAAD,EAAuB,YAAY,CAAE,KAAKrC,KAAL,CAAWM,YAAhD,EA5BR,GADJ,CAiCH,C,gCA1H4BX,KAAK,CAAC2C,S,EA6HvC,cAAexC,CAAAA,kBAAf","sourcesContent":["import * as React from \"react\";\nimport ApiClient from \"../services/ApiClient\";\nimport LastAttemptsComponent from './LastAttemptsComponent';\n\nclass ChallengeComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            a: '', b: '',\n            user: '',\n            message: '',\n            guess: 0,\n            lastAttempts: [],\n        };\n        this.handleSubmitResult = this.handleSubmitResult.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.refreshChallenge();\n    }\n\n    refreshChallenge() {\n        ApiClient.challenge().then(\n            res => {\n                if (res.ok) {\n                    res.json().then(json => {\n                        this.setState({\n                            a: json.factorA,\n                            b: json.factorB\n                        });\n                    });\n                } else {\n                    this.updateMessage(\"Can't reach the server\");\n                }\n            }\n        );\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        this.setState({\n            [name]: event.target.value\n        });\n    }\n\n    handleSubmitResult(event) {\n        event.preventDefault();\n        ApiClient.sendGuess(this.state.user,\n            this.state.a, this.state.b,\n            this.state.guess)\n            .then(res => {\n                if (res.ok) {\n                    res.json().then(json => {\n                        if (json.correct) {\n                            this.updateMessage(\"Congratulations! Your guess is correct\");\n                        } else {\n                            this.updateMessage(\"Oops! Your guess \" + json.resultAttempt +\n                            \" is wrong, but keep playing!\");\n                        }\n                        this.updateLastAttempts(this.state.user);\n                        this.refreshChallenge();\n                    });\n                } else {\n                   this.updateMessage(\"Error: server error or not available\");\n                }\n            });\n    }\n\n    updateMessage(m: string) {\n        this.setState({\n          message: m\n        });\n    }\n\n    updateLastAttempts(userAlias: string) {\n        ApiClient.getAttempts(userAlias).then(res => {\n            if (res.ok) {\n                let attempts: Attempt[] = [];\n                res.json().then(data => {\n                    data.forEach(item => {\n                        attempts.push(item);\n                    });\n                    this.setState({\n                        lastAttempts: attempts\n                    });\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"display-column\">\n                <div>\n                    <h3>Your new challenge is</h3>\n                    <div className=\"challenge\">\n                        {this.state.a} x {this.state.b}\n                    </div>\n                </div>\n                <form onSubmit={this.handleSubmitResult}>\n                    <label>\n                        Your alias:\n                        <input type=\"text\" maxLength=\"12\"\n                               name=\"user\"\n                               value={this.state.user}\n                               onChange={this.handleChange}/>\n                    </label>\n                    <br/>\n                    <label>\n                        Your guess:\n                        <input type=\"number\" min=\"0\"\n                               name=\"guess\"\n                               value={this.state.guess}\n                               onChange={this.handleChange}/>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </form>\n                <h4>{this.state.message}</h4>\n                {this.state.lastAttempts.length > 0 &&\n                    <LastAttemptsComponent lastAttempts={this.state.lastAttempts}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ChallengeComponent;\n"]},"metadata":{},"sourceType":"module"}